{"id":"node_modules/@tensorflow-models/posenet/dist/base_model.js","dependencies":[{"name":"C:\\Users\\Zion\\Documents\\github\\tfjs-models\\posenet\\demos\\package.json","includedInParent":true,"mtime":1572066226653},{"name":"C:\\Users\\Zion\\Documents\\github\\tfjs-models\\posenet\\demos\\.babelrc","includedInParent":true,"mtime":1572066226615},{"name":"C:\\Users\\Zion\\Documents\\github\\tfjs-models\\posenet\\demos\\node_modules\\@tensorflow-models\\posenet\\package.json","includedInParent":true,"mtime":1572066943609},{"name":"@tensorflow/tfjs-core","loc":{"line":3,"column":17},"parent":"C:\\Users\\Zion\\Documents\\github\\tfjs-models\\posenet\\demos\\node_modules\\@tensorflow-models\\posenet\\dist\\base_model.js","resolved":"C:\\Users\\Zion\\Documents\\github\\tfjs-models\\posenet\\demos\\node_modules\\@tensorflow\\tfjs-core\\dist\\tf-core.esm.js"}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tf = require(\"@tensorflow/tfjs-core\");\r\nvar BaseModel = (function () {\r\n    function BaseModel(model, outputStride) {\r\n        this.model = model;\r\n        this.outputStride = outputStride;\r\n        var inputShape = this.model.inputs[0].shape;\r\n        tf.util.assert((inputShape[1] === -1) && (inputShape[2] === -1), function () { return \"Input shape [\" + inputShape[1] + \", \" + inputShape[2] + \"] \" +\r\n            \"must both be equal to or -1\"; });\r\n    }\r\n    BaseModel.prototype.predict = function (input) {\r\n        var _this = this;\r\n        return tf.tidy(function () {\r\n            var asFloat = _this.preprocessInput(input.toFloat());\r\n            var asBatch = asFloat.expandDims(0);\r\n            var results = _this.model.predict(asBatch);\r\n            var results3d = results.map(function (y) { return y.squeeze([0]); });\r\n            var namedResults = _this.nameOutputResults(results3d);\r\n            return {\r\n                heatmapScores: namedResults.heatmap.sigmoid(),\r\n                offsets: namedResults.offsets,\r\n                displacementFwd: namedResults.displacementFwd,\r\n                displacementBwd: namedResults.displacementBwd\r\n            };\r\n        });\r\n    };\r\n    BaseModel.prototype.dispose = function () {\r\n        this.model.dispose();\r\n    };\r\n    return BaseModel;\r\n}());\r\nexports.BaseModel = BaseModel;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}}],"sources":{"node_modules/@tensorflow-models/posenet/dist/base_model.js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tf = require(\"@tensorflow/tfjs-core\");\r\nvar BaseModel = (function () {\r\n    function BaseModel(model, outputStride) {\r\n        this.model = model;\r\n        this.outputStride = outputStride;\r\n        var inputShape = this.model.inputs[0].shape;\r\n        tf.util.assert((inputShape[1] === -1) && (inputShape[2] === -1), function () { return \"Input shape [\" + inputShape[1] + \", \" + inputShape[2] + \"] \" +\r\n            \"must both be equal to or -1\"; });\r\n    }\r\n    BaseModel.prototype.predict = function (input) {\r\n        var _this = this;\r\n        return tf.tidy(function () {\r\n            var asFloat = _this.preprocessInput(input.toFloat());\r\n            var asBatch = asFloat.expandDims(0);\r\n            var results = _this.model.predict(asBatch);\r\n            var results3d = results.map(function (y) { return y.squeeze([0]); });\r\n            var namedResults = _this.nameOutputResults(results3d);\r\n            return {\r\n                heatmapScores: namedResults.heatmap.sigmoid(),\r\n                offsets: namedResults.offsets,\r\n                displacementFwd: namedResults.displacementFwd,\r\n                displacementBwd: namedResults.displacementBwd\r\n            };\r\n        });\r\n    };\r\n    BaseModel.prototype.dispose = function () {\r\n        this.model.dispose();\r\n    };\r\n    return BaseModel;\r\n}());\r\nexports.BaseModel = BaseModel;\r\n"},"lineCount":34}},"error":null,"hash":"e246f4b4be49f87bbfd90932474e7824","cacheData":{"env":{}}}