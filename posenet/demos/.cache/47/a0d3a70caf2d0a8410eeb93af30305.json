{"id":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","dependencies":[{"name":"C:\\Users\\Zion\\Documents\\github\\tfjs-models\\posenet\\demos\\package.json","includedInParent":true,"mtime":1572066226653},{"name":"C:\\Users\\Zion\\Documents\\github\\tfjs-models\\posenet\\demos\\.babelrc","includedInParent":true,"mtime":1572066226615},{"name":"C:\\Users\\Zion\\Documents\\github\\tfjs-models\\posenet\\demos\\node_modules\\@tensorflow-models\\posenet\\package.json","includedInParent":true,"mtime":1572066943609},{"name":"./max_heap","loc":{"line":3,"column":25},"parent":"C:\\Users\\Zion\\Documents\\github\\tfjs-models\\posenet\\demos\\node_modules\\@tensorflow-models\\posenet\\dist\\multi_pose\\build_part_with_score_queue.js","resolved":"C:\\Users\\Zion\\Documents\\github\\tfjs-models\\posenet\\demos\\node_modules\\@tensorflow-models\\posenet\\dist\\multi_pose\\max_heap.js"}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar max_heap_1 = require(\"./max_heap\");\r\nfunction scoreIsMaximumInLocalWindow(keypointId, score, heatmapY, heatmapX, localMaximumRadius, scores) {\r\n    var _a = scores.shape, height = _a[0], width = _a[1];\r\n    var localMaximum = true;\r\n    var yStart = Math.max(heatmapY - localMaximumRadius, 0);\r\n    var yEnd = Math.min(heatmapY + localMaximumRadius + 1, height);\r\n    for (var yCurrent = yStart; yCurrent < yEnd; ++yCurrent) {\r\n        var xStart = Math.max(heatmapX - localMaximumRadius, 0);\r\n        var xEnd = Math.min(heatmapX + localMaximumRadius + 1, width);\r\n        for (var xCurrent = xStart; xCurrent < xEnd; ++xCurrent) {\r\n            if (scores.get(yCurrent, xCurrent, keypointId) > score) {\r\n                localMaximum = false;\r\n                break;\r\n            }\r\n        }\r\n        if (!localMaximum) {\r\n            break;\r\n        }\r\n    }\r\n    return localMaximum;\r\n}\r\nfunction buildPartWithScoreQueue(scoreThreshold, localMaximumRadius, scores) {\r\n    var _a = scores.shape, height = _a[0], width = _a[1], numKeypoints = _a[2];\r\n    var queue = new max_heap_1.MaxHeap(height * width * numKeypoints, function (_a) {\r\n        var score = _a.score;\r\n        return score;\r\n    });\r\n    for (var heatmapY = 0; heatmapY < height; ++heatmapY) {\r\n        for (var heatmapX = 0; heatmapX < width; ++heatmapX) {\r\n            for (var keypointId = 0; keypointId < numKeypoints; ++keypointId) {\r\n                var score = scores.get(heatmapY, heatmapX, keypointId);\r\n                if (score < scoreThreshold) {\r\n                    continue;\r\n                }\r\n                if (scoreIsMaximumInLocalWindow(keypointId, score, heatmapY, heatmapX, localMaximumRadius, scores)) {\r\n                    queue.enqueue({ score: score, part: { heatmapY: heatmapY, heatmapX: heatmapX, id: keypointId } });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return queue;\r\n}\r\nexports.buildPartWithScoreQueue = buildPartWithScoreQueue;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}}],"sources":{"node_modules/@tensorflow-models/posenet/dist/multi_pose/build_part_with_score_queue.js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar max_heap_1 = require(\"./max_heap\");\r\nfunction scoreIsMaximumInLocalWindow(keypointId, score, heatmapY, heatmapX, localMaximumRadius, scores) {\r\n    var _a = scores.shape, height = _a[0], width = _a[1];\r\n    var localMaximum = true;\r\n    var yStart = Math.max(heatmapY - localMaximumRadius, 0);\r\n    var yEnd = Math.min(heatmapY + localMaximumRadius + 1, height);\r\n    for (var yCurrent = yStart; yCurrent < yEnd; ++yCurrent) {\r\n        var xStart = Math.max(heatmapX - localMaximumRadius, 0);\r\n        var xEnd = Math.min(heatmapX + localMaximumRadius + 1, width);\r\n        for (var xCurrent = xStart; xCurrent < xEnd; ++xCurrent) {\r\n            if (scores.get(yCurrent, xCurrent, keypointId) > score) {\r\n                localMaximum = false;\r\n                break;\r\n            }\r\n        }\r\n        if (!localMaximum) {\r\n            break;\r\n        }\r\n    }\r\n    return localMaximum;\r\n}\r\nfunction buildPartWithScoreQueue(scoreThreshold, localMaximumRadius, scores) {\r\n    var _a = scores.shape, height = _a[0], width = _a[1], numKeypoints = _a[2];\r\n    var queue = new max_heap_1.MaxHeap(height * width * numKeypoints, function (_a) {\r\n        var score = _a.score;\r\n        return score;\r\n    });\r\n    for (var heatmapY = 0; heatmapY < height; ++heatmapY) {\r\n        for (var heatmapX = 0; heatmapX < width; ++heatmapX) {\r\n            for (var keypointId = 0; keypointId < numKeypoints; ++keypointId) {\r\n                var score = scores.get(heatmapY, heatmapX, keypointId);\r\n                if (score < scoreThreshold) {\r\n                    continue;\r\n                }\r\n                if (scoreIsMaximumInLocalWindow(keypointId, score, heatmapY, heatmapX, localMaximumRadius, scores)) {\r\n                    queue.enqueue({ score: score, part: { heatmapY: heatmapY, heatmapX: heatmapX, id: keypointId } });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return queue;\r\n}\r\nexports.buildPartWithScoreQueue = buildPartWithScoreQueue;\r\n"},"lineCount":46}},"error":null,"hash":"58b9cd26407d4e16a7aebc952411cba8","cacheData":{"env":{}}}